<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[探寻最适合业务的架构]]></title>
      <url>/2017/08/03/%E6%8E%A2%E5%AF%BB%E6%9C%80%E9%80%82%E5%90%88%E4%B8%9A%E5%8A%A1%E7%9A%84%E6%9E%B6%E6%9E%84/</url>
      <content type="html"><![CDATA[<h2 id="MVC"><a href="#MVC" class="headerlink" title="MVC"></a>MVC</h2><p>在 iOS 开发中，MVC（Model View Controller）是构建iOS App的标准模式，是苹果推荐的一个用来组织代码的权威范式。</p>
<p><img src="/2017/08/03/探寻最适合业务的架构/MVC框架.png" alt="MVC框架"> </p>
<a id="more"></a>
<p>所谓的 MVC 是指：  </p>
<ul>
<li>Model: 数据的拥有者，实现具体的业务逻辑。  </li>
<li>View: 具体的用户界面。  </li>
<li>Controller: 负责将 View 中用户的动作传达给 Model，将 Model 的数据通过 View 展现出来。   </li>
</ul>
<h3 id="关于Controller的臃肿问题"><a href="#关于Controller的臃肿问题" class="headerlink" title="关于Controller的臃肿问题"></a>关于Controller的臃肿问题</h3><p>Controller 里面就只应该存放这些不能复用的代码，这些代码包括：  </p>
<ul>
<li>在初始化时，构造相应的 View 和 Model。  </li>
<li>监听 Model 层的事件，将 Model 层的数据传递到 View 层。  </li>
<li>监听 View 层的事件，并且将 View 层的事件转发到 Model 层。  </li>
</ul>
<h2 id="MVVM"><a href="#MVVM" class="headerlink" title="MVVM"></a>MVVM</h2><p><img src="/2017/08/03/探寻最适合业务的架构/MVVM框架.png" alt="MVVM框架">   </p>
<p>如图：MVVM框架是 MVC 的增强版，我们正式连接了视图和控制器，并将表示逻辑从 Controller 移出放到一个新的对象里，即 View Model。  </p>
<p>基于MVVM设计思路，ViewModel存在目的在于抽离ViewController中展示业务逻辑，而不是替代ViewController，其它视图操作业务等还是应该放在ViewController中实现。</p>
<p>注意：ViewModel既然不负责视图操作逻辑，ViewModel中就不应该存在任何View对象，更不应该存在Push/Present等视图跳转逻辑。因此，ViewModel中绝不应该存在任何视图操作相关的代码。</p>
<p>MVVM框架中数据流向可以表示为ViewModel -&gt; ViewController -&gt; View</p>
<h2 id="更适合项目业务的架构"><a href="#更适合项目业务的架构" class="headerlink" title="更适合项目业务的架构"></a>更适合项目业务的架构</h2><p><img src="/2017/08/03/探寻最适合业务的架构/iOS架构.png" alt="框架"></p>
<p>由于目前项目是按模块开发，从每个独立的功能模块考虑，单个模块适合MVC为基础，分离出网络层、界面拼装层、ViewModel层、数据持久化层等等层次架构。减少ViewController中的代码，降低View和Model的耦合。</p>
<h3 id="网络请求层"><a href="#网络请求层" class="headerlink" title="网络请求层"></a>网络请求层</h3><h3 id="界面拼装层"><a href="#界面拼装层" class="headerlink" title="界面拼装层"></a>界面拼装层</h3><h3 id="ViewModel层"><a href="#ViewModel层" class="headerlink" title="ViewModel层"></a>ViewModel层</h3><h3 id="数据持久化层"><a href="#数据持久化层" class="headerlink" title="数据持久化层"></a>数据持久化层</h3><h3 id="其他层"><a href="#其他层" class="headerlink" title="其他层"></a>其他层</h3><p>与其他模块通用类</p>
]]></content>
      
        <categories>
            
            <category> 架构 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> MVC </tag>
            
            <tag> MVVM </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CocoaPod工作原理]]></title>
      <url>/2017/07/09/CocoaPod%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/</url>
      <content type="html"><![CDATA[<p><img src="/2017/07/09/CocoaPod工作原理/CocoaPod工作原理.png" alt="&quot;CocoaPod工作原理图解&quot;"><br><a id="more"></a></p>
]]></content>
      
        <categories>
            
            <category> 工具 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> CocoaPod </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[OC和Swift的单例模式]]></title>
      <url>/2017/07/06/OC%E5%92%8CSwift%E7%9A%84%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/</url>
      <content type="html"><![CDATA[<p>单例模式是iOS开发中常用的设计模式，可以保证一个类只有一个对象实例。  </p>
<p>在Objective-C中单例常用的写法：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">Manager</span></span></div><div class="line">+ (<span class="keyword">instancetype</span>) shareManager &#123;</div><div class="line">    <span class="keyword">static</span> Manager* staticInstance = <span class="literal">nil</span>;</div><div class="line">    </div><div class="line">    <span class="keyword">static</span> <span class="built_in">dispatch_once_t</span> onceToken;</div><div class="line">    <span class="built_in">dispatch_once</span>(&amp;onceToken, ^&#123;</div><div class="line">        staticInstance = [[<span class="keyword">self</span> alloc] init];</div><div class="line">    &#125;) ;</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> staticInstance;</div><div class="line">&#125;</div><div class="line"><span class="keyword">@end</span></div></pre></td></tr></table></figure>
<a id="more"></a>
<p>使用GCD中的dispatch_once_t可以保证里面的代码只被调用一次。  </p>
<p>在Swift 3.0 单例推荐写法：</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Manager</span> </span>&#123;</div><div class="line">    <span class="keyword">static</span> <span class="keyword">let</span> shared = <span class="type">Manager</span>()</div><div class="line">    <span class="keyword">private</span> <span class="keyword">init</span>()&#123;&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>static在Swift中表示 “类型范围作用域”，可以使用它来定义类型存储属性，类中的static属性拥有全局作用域和懒加载属性。<br>private关键字在Swift中表示“私有”。</p>
]]></content>
      
        <categories>
            
            <category> 设计模式 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> OC </tag>
            
            <tag> Swift </tag>
            
            <tag> 单例 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello World,Goodbey HDU]]></title>
      <url>/2017/06/14/Hello-World-Goodby-HDU/</url>
      <content type="html"><![CDATA[<p><img src="/2017/06/14/Hello-World-Goodby-HDU/001.png" alt="&quot;我们毕业啦&quot;"><br><a id="more"></a><br>打算写这篇文章很久了，总在起笔时欲言又止，脑海晃过一个个画面，不知该从何说起。</p>
<p>不如，从头开始。  </p>
<p>我记得那是一个下雨的日子，江南常有的雨天，天真的少年就这样闯进了文一路的杭电。<br>也许大学是从梧桐树斑驳光影下的军训开始的，也许是从工字楼213五个人初见开始的，也许是从第一行C代码”Hello World”开始的。 </p>
<p>就在懵懵懂懂中开始了。</p>
<p><img src="/2017/06/14/Hello-World-Goodby-HDU/003.png" alt="&quot;文一校区 梧桐树&quot;"></p>
<p>那时的东阳赌神还在炸金花，那时的柯桥富帅还没修学，那时的河北宗文帮我们搞定了很多代码，那时的河南蒲少爱上了页游。  </p>
<p>还有那个少年，他们叫他Hreo,他说他喜欢漫威里超级英雄Bumblebee。</p>
<p><img src="/2017/06/14/Hello-World-Goodby-HDU/002.png" alt="&quot;赌神，你们为什么没有在一起？&quot;"> </p>
<p>大一。 </p>
<p>熙熙攘攘的社团，组团吃喝玩乐的文一路，度日如年的晚自习。<br>体育课上的太极十八式，马克思主义课上的小胖老师，点名考勤的红白卡。<br>学校对面重庆麻辣烫的阿姨，这一次葱蒜麻辣我都要。<br>沙县大酒店的蒸饺。<br>炸鸭腿饭的老板，加一瓶可乐。<br>还有到现在还不怎么会的C语言。 </p>
<p>你们都还在吗？</p>
<p><img src="/2017/06/14/Hello-World-Goodby-HDU/004.png" alt="&quot;田北的支教时光&quot;"> </p>
<p>田北小学的孩子们，你们都长大了吗？</p>
<p>可那个少年还是一个孩子。</p>
<p>大二。</p>
<p>洋溢。<br>你好吗？<br>B支4依旧在文一和下沙之间穿梭。</p>
<p>人生是一场错过。</p>
<p><img src="/2017/06/14/Hello-World-Goodby-HDU/006.png" alt="&quot;田北的支教时光&quot;"></p>
<p>西藏。<br>仓央嘉措和玛吉阿米的拉萨。</p>
<p><img src="/2017/06/14/Hello-World-Goodby-HDU/009.png" alt="&quot;一个人需要隐藏多少秘密才能巧妙地度过一生&quot;"></p>
<p>曾虑多情损梵行，入山又恐别倾城。<br>世间安得双全法，不负如来不负卿。</p>
<p><img src="/2017/06/14/Hello-World-Goodby-HDU/005.png" alt="&quot;纳木措&quot;"></p>
<p>大三。 </p>
<p>王大全老师，您的又大又全理论我想我能理解。<br>谢谢您带我领略软件工程的工程思维。<br>您的面壁蹲墙功我不会忘。<br>愿您，好好的。<br>相信师母，已变成了天使，从此没有忧伤。</p>
<p>实验室里的翔哥，耐心的讲解着OC代码。</p>
<p><img src="/2017/06/14/Hello-World-Goodby-HDU/007.png" alt="&quot;回不去了&quot;"></p>
<p>WANG：你为什么要写iOS项目交作业。<br>ME：我就喜欢。<br>王老师我这回答你可满意？<br>从此走上了iOS Developer的不归路。  </p>
<p>美国。<br>纽约。波士顿。奥兰多。迈阿密。洛杉矶。</p>
<p><img src="/2017/06/14/Hello-World-Goodby-HDU/010.png" alt="&quot;Key West, Florida&quot;"></p>
<p>大四。</p>
<p>代码。毕设。离别。实习。租房。Goodbey HDU。  </p>
<p>各奔东西的我们。<br>赌神回了东阳，混进了农行。<br>宗文放弃了读研，交了女朋友留在杭州写代码。<br>蒲少，还没来不得及问你志在何方。<br>富帅已经回来，最后一次见他，是在寝室打游戏。<br>Fight吧，少年们，用力活着用力爱哪怕肝脑涂地。      </p>
<p>还有。<br>敬爱青云书记，小胡子同学。<br>戴逗，涛哥，小董三人组。<br>耀卓，逗逗，鲜花。勇勇，奕廷。<br>离开计算机专业后的向宇，是否已经实现了你的梦想。<br>再见了，少年们，说了再见还会再见的吧。    </p>
<p><img src="/2017/06/14/Hello-World-Goodby-HDU/008.png" alt="&quot;都知欢聚最难得，难奈别离多&quot;"></p>
<p>那个少年。  </p>
<p>许多年前，有一双清澈的双眼。<br>想看遍这世界，去最遥远的远方。<br>感觉有双翅膀，能飞越高山和海洋。<br>爱上一个人，就不怕付出自己一生。<br>相信爱会永恒，相信每个陌生人。  </p>
<p>当我和世界初相见，当我曾经是少年。  </p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=26508186&auto=1&height=66"></iframe>
]]></content>
      
        <categories>
            
            <category> 杂记 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> School </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
